- alias: 'REST set sensor data'
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: sensor.netatmo_living_room_temperature, sensor.netatmo_bedroom_temperature, sensor.netatmo_outside_temperature, sensor.smoke_sensor_livingroom_temperature
  - platform: state
    entity_id: sensor.flood_sensor_bathroom_temperature, sensor.motion_hall_temperature, sensor.thermometer_storeroom_temperature, sensor.thermometer_office_temperature
  - platform: state
    entity_id: sensor.power_livingroom_tv_power, sensor.power_office_pc_power
  - platform: state
    entity_id: sun.sun
    to: above_horizon
  - platform: state
    entity_id: sun.sun
    to: below_horizon
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state != "unavailable" }}'
  - condition: template
    value_template: '{{ trigger.to_state.state != "unknown" }}'
  action:
  - service: rest_command.tomlin_sensor
    data:
      sensor: '{{ trigger.to_state.object_id }}'
      value: '{{ trigger.to_state.state }}'

#- alias: 'REST update sensor data'
#  initial_state: 'on'
#  trigger:
#  - platform: state
#    entity_id: sensor.power_livingroom_tv_power, sensor.power_office_pc_power
#  - platform: sun
#    event: sunset
#  - platform: sun
#    event: sunrise
#  action:
#  - service: rest_command.tomlin_sensor
#    data:
#      action: 'update'
#      sensor: '{{ trigger.to_state.object_id }}'
#      value: '{{ trigger.to_state.state }}'
